name: CI/CD workflow
run-name: ${{ github.actor }} is deploying the cms

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
      id-token: write
      contents: read
jobs:
  Preview:
    runs-on: ubuntu-latest
    environment: preview
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Show subscription details
        uses: azure/CLI@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Deploy infrastructure
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./deploy/infrastructure.bicep
          failOnStdErr: false

      # - name: "Login to ACR"
      #   run: |
      #     set -euo pipefail
      #     access_token=$(az account get-access-token --query accessToken -o tsv)
      #     refresh_token=$(curl https://${{ secrets.REGISTRY_NAME }}.azurecr.io/oauth2/exchange -v -d "grant_type=access_token&service=${{ secrets.REGISTRY_NAME }}.azurecr.io&access_token=$access_token" | jq -r .refresh_token)
      #     docker login -u 00000000-0000-0000-0000-000000000000 --password-stdin ${{ secrets.REGISTRY_NAME }}.azurecr.io <<< "$refresh_token"

      # - name: Build and push container image
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: ${{ secrets.REGISTRY_NAME }}.azurecr.io/cms:latest
      #     file: ./Dockerfile.prod
      #     build-args: |
      #       NODE_ENV=production

      - name: Deploy cms
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./deploy/main.bicep
          failOnStdErr: false

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-xprtzbv-cms'
          slot-name: 'preproduction'
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .

  Production:
    needs: Preview
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Show subscription details
        uses: azure/CLI@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Deploy infrastructure
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./deploy/infrastructure.bicep
          failOnStdErr: false

      - name: Deploy cms
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          region: westeurope
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          template: ./deploy/main.bicep
          failOnStdErr: false

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-xprtzbv-cms'
          slot-name: 'production'
          package: .
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
