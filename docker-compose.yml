services:
  # strapi:
  #   container_name: cms
  #   build: .
  #   image: cms:latest
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     DATABASE_CLIENT: ${DATABASE_CLIENT}
  #     DATABASE_HOST: database
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     DATABASE_USERNAME: ${DATABASE_USERNAME}
  #     DATABASE_PORT: ${DATABASE_PORT}
  #     JWT_SECRET: ${JWT_SECRET}
  #     ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     NODE_ENV: ${NODE_ENV}
  #   volumes:
  #     - ./config:/opt/app/config
  #     - ./src:/opt/app/src
  #     - ./package.json:/opt/package.json
  #     - ./yarn.lock:/opt/yarn.lock
  #     - ./.env:/opt/app/.env
  #     - ./public/uploads:/opt/app/public/uploads
  #   ports:
  #     - '1337:1337'
  #   networks:
  #     - strapi
  #   depends_on:
  #     - database

  database:
    container_name: database
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${ADMINUSER}
      POSTGRES_PASSWORD: ${ADMINPASSWORD}
      POSTGRES_DB: ${STRAPIDATABASENAME}
    volumes:
      - cms-data:/var/lib/postgresql/data/ #using a volume
    ports:
      - '5432:5432'
    networks:
      - strapi

  # init-database:
  #   container_name: init-database
  #   image: cms/init
  #   env_file: .env
  #   environment:
  #     ADMINUSER: ${ADMINUSER}
  #     ADMINPASSWORD: ${ADMINPASSWORD}
  #     SERVER: database
  #     STRAPIUSER: ${STRAPIUSER}
  #     STRAPIPASSWORD: ${STRAPIPASSWORD}
  #     STRAPIDATABASENAME: ${STRAPIDATABASENAME}
  #   networks:
  #     - strapi
  #   depends_on:
  #     database:
  #       condition: service_started

volumes:
  cms-data:

networks:
  strapi:
    name: strapi
    driver: bridge
