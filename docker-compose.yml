services:
  database:
    container_name: database
    restart: unless-stopped
    env_file: .env
    image: postgres:16
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${ADMINUSER}" ]
    environment:
      POSTGRES_USER: ${ADMINUSER}
      POSTGRES_PASSWORD: ${ADMINPASSWORD}
      POSTGRES_DB: ${STRAPIDATABASENAME}
    volumes:
      - cms-data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    networks:
      - strapi

  init-database:
    container_name: init-database
    build:
      dockerfile: Dockerfile.database
      context: .
    env_file: .env
    environment:
      ADMINUSER: ${ADMINUSER}
      ADMINPASSWORD: ${ADMINPASSWORD}
      SERVER: database
      STRAPIUSER: ${STRAPIUSER}
      STRAPIPASSWORD: ${STRAPIPASSWORD}
      STRAPIDATABASENAME: ${STRAPIDATABASENAME}
    networks:
      - strapi
    depends_on:
      database:
        condition: service_healthy

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    container_name: "azurite"
    hostname: azurite
    restart: always
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - storage-data:/data/

volumes:
  cms-data:
  storage-data:


networks:
  strapi:
    name: strapi
    driver: bridge
